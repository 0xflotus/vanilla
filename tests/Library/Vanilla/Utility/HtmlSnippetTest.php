<?php
/**
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

namespace VanillaTests\Library\Vanilla\Utility;

use PHPUnit\Framework\TestCase;
use Vanilla\Utility\HtmlSnippet;

/**
 * Class HtmlSnippetTest
 *
 * @package VanillaTests\Library\Vanilla\Utility
 */
class HtmlSnippetTest extends TestCase {

    /**
     * @var HtmlSnippet
     */
    private $html;

    /**
     * {@inheritdoc}
     */
    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->html = new HtmlSnippet();
    }

    /**
     * Test Dom saveXML method.
     */
    public function testBasicSaveXml(): void {
        $html = 'Hello World!.';
        $this->html->loadHtml($html);
        $result = $this->html->saveXML();
        $this->assertSame($html, $result);
    }

    /**
     * Test Dom saveHtml method.
     */
    public function testBasicSaveHtml(): void {
        $html = <<<HTML
<b>Hello World!.ðŸ¤“</b>
HTML;
        $this->html->loadHtml($html);
        $result = $this->html->saveHTML();
        $this->assertSame($html, $result);
    }

    /**
     * HTML should be loaded and saved
     *
     * @param string $html
     * @dataProvider provideHtmlSnippets
     */
    public function testLoadSaveHTML(string $html): void {
        $this->html->loadHTML($html);
        $actual = $this->html->saveHTML();
        $this->assertSame($html, $actual);
    }

    /**
     * @return array
     */
    public function provideHtmlSnippets(): array {
        $r = [
            'plain text' => ['Hello world!'],
            'one tag' => ['<b>Hello world!ðŸ¤“</b>'],
            'multiple tags' => ["<div>a</div>\n\n<div>b</div>"],
            'mixed plain text and tags' => ['a <b>b</b>'],
        ];
        return $r;
    }
}
